[{"C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\index.js":"1","C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\App.js":"2","C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\Navbar.js":"3","C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\RowGallery.js":"4","C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\Main.js":"5","C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\Contact.js":"6","C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\About.js":"7","C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\PicModal.js":"8","C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\helpFunctions\\getImageNames.js":"9"},{"size":480,"mtime":1618509732073,"results":"10","hashOfConfig":"11"},{"size":1166,"mtime":1620659089923,"results":"12","hashOfConfig":"11"},{"size":1467,"mtime":1620659106912,"results":"13","hashOfConfig":"11"},{"size":1804,"mtime":1618509732069,"results":"14","hashOfConfig":"11"},{"size":1376,"mtime":1619437507999,"results":"15","hashOfConfig":"11"},{"size":3069,"mtime":1620393692969,"results":"16","hashOfConfig":"11"},{"size":882,"mtime":1618509732066,"results":"17","hashOfConfig":"11"},{"size":891,"mtime":1618509732068,"results":"18","hashOfConfig":"11"},{"size":295,"mtime":1618509732073,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1mizi4r",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\index.js",[],["44","45"],"C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\App.js",["46"],"import React, {useEffect} from 'react';\r\nimport Navbar from './Navbar';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport { createBrowserHistory } from 'history';\r\nimport ReactGA from 'react-ga';\r\n\r\n\r\nReactGA.initialize(process.env.REACT_APP_GA_TRACKING_CODE)\r\nconst browserHistory = createBrowserHistory()\r\nbrowserHistory.listen((location, action) => {\r\n    ReactGA.pageview(location.pathname + location.search)\r\n})\r\n\r\nconst App = () => {\r\n    \r\n\r\n    useEffect(() => {\r\n        ReactGA.pageview(window.location.pathname + window.location.search)\r\n    }, [])\r\n\r\n    // const script = document.createElement(\"script\");\r\n    // script.async = true;\r\n    // script.text = process.env.REACT_APP_GA_TRACKING_CODE;\r\n    // document.body.appendChild(script);\r\n\r\n    // ReactGA.initialize(process.env.REACT_APP_GA_TRACKING_CODE);\r\n    // console.log(\"See on GA kood\" + process.env.REACT_APP_GA_TRACKING_CODE);\r\n\r\n    // useEffect(() => {\r\n    //     ReactGA.pageview(window.location.pathname + window.location.search);\r\n    // })\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Navbar />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default App;","C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\Navbar.js",["47","48"],"import { BrowserRouter as Router, Link, Redirect, Route } from 'react-router-dom';\r\nimport RowGallery from \"./RowGallery.js\";\r\nimport Main from './Main';\r\nimport Contact from './Contact';\r\nimport About from './About';\r\nimport ReactGA from 'react-ga';\r\nimport createHistory from 'history/createBrowserHistory';\r\n\r\n\r\nfunction Navbar() {\r\n\r\n    // const history = createHistory()\r\n    // ReactGA.initialize(process.env.REACT_APP_GA_TRACKING_CODE);\r\n    // history.listen((location, action) => {\r\n    //     ReactGA.pageview(location.pathname + location.search);\r\n    //     console.log(location.pathname)\r\n    // });\r\n    \r\n    return (\r\n        <Router>\r\n            <div>\r\n                <section className='navbar'>\r\n                        <Link to=\"/home\">Home </Link>\r\n                        <Link to=\"/gallery\">Gallery </Link>\r\n                        <Link to=\"/about\">About </Link>\r\n                        <Link to=\"/contact\">Contact </Link>\r\n                </section>\r\n                <section className='content'>\r\n                    <Route path=\"/gallery\" component={RowGallery}/>\r\n                    <Route path=\"/home\" component={Main} />\r\n                    <Route path=\"/contact\" component={Contact} />\r\n                    <Route path=\"/about\" component={About} />\r\n                    <Route path=\"/\"><Redirect to=\"/home\"></Redirect></Route>\r\n                </section>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\RowGallery.js",[],"C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\Main.js",["49","50","51","52","53","54","55","56","57"],"import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Link, Redirect, Route } from 'react-router-dom';\r\nimport Contact from './Contact';\r\nimport ReactGA from 'react-ga';\r\n\r\nimport './css/main.css';\r\nimport './css/general.css';\r\nimport { BiWindows } from 'react-icons/bi';\r\n\r\n\r\nconst Main = () => {\r\n\r\n    const handleContactClick = () => {\r\n        <Router>\r\n            <Route path=\"/contact\" component={Contact} />\r\n        </Router>\r\n    }\r\n\r\n\r\n    return(\r\n        \r\n        <section className=\"main\">\r\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n            <section className=\"introduction\">\r\n                <h1>Mait Jurask PORTFOLIO</h1>\r\n            </section>\r\n            <section className=\"about\">\r\n                <img src={\"./logo_white.png\"} alt=\"Signature placeholder\"/>\r\n                <Link to='/contact' type='button' className=\"button\">Contact Me</Link>\r\n            </section>\r\n                <section className='icons'>\r\n                    <a target=\"_blank\" href=\"https://instagram.com/maitjurask\" className='fa fa-instagram'></a>\r\n                    <a target=\"_blank\" href=\"https://www.flickr.com/photos/164370955@N05/\" className='fa fa-flickr'></a>\r\n                </section>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Main;","C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\Contact.js",["58","59","60","61","62","63","64","65"],"import React, {useState, useRef} from 'react';\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\nimport env from 'react-dotenv';\r\nimport './css/general.css';\r\nimport './css/contact.css';\r\nrequire('dotenv').config();\r\nconst Contact = () => {\r\n    const [status, setStatus] = useState(\"Submit\");\r\n    const [msgStatus, setMsgStatus] = useState(false);\r\n    const [contactMessage, setContactMessage] = useState('Something went wrong');\r\n    const [token, setToken] = useState(\"\");\r\n    const recaptchaRef = React.createRef();\r\n\r\n\r\n    function onChange(value) {\r\n        setToken(value);\r\n        console.log(\"Captcha value:\", value);\r\n    }\r\n\r\n    // const handleToken = (token) => {\r\n    //     setForm((currentForm) => {\r\n    //         return {...currentForm, token }\r\n    //     })\r\n    // }\r\n\r\n    // const handleExpire = () => {\r\n    //     setForm((currentForm) => {\r\n    //         return {...currentForm, token: null }\r\n    //     })\r\n    // }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const recaptchaValue = recaptchaRef.current.getValue();\r\n\r\n        setStatus(\"Sending...\");\r\n        const {name, email, message} = e.target.elements;\r\n        let details = {\r\n            name: name.value,\r\n            email: email.value,\r\n            message: message.value,\r\n        };\r\n        let response = await fetch(\"http://localhost:3001/contact\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify(details),\r\n      });\r\n      setStatus(\"Submit\");\r\n      let result = await response.json();\r\n      console.log(result.status);\r\n      if(result.status == \"Message Sent\") {\r\n        setContactMessage('Kiri saadetud!');\r\n        setMsgStatus(true);\r\n\r\n      };\r\n    };\r\n\r\n    return(\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n        \r\n            <section className='contact'>\r\n                <section className='heading'>\r\n                    <h1>Contact Me</h1>\r\n                </section>\r\n                <section className=\"contactForm\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" id='name' name='name' placeholder='Name...' required/>\r\n                    <label>Email</label>\r\n                    <input type=\"email\" id='email' name='email' placeholder='E-mail...'/>\r\n                    <label>Subject</label>\r\n                    <input type=\"text\" id='message' name='message' placeholder='Some text...'/>\r\n                    <div className='recaptcha'>\r\n                        <ReCAPTCHA sitekey={process.env.REACT_APP_RECAPTCHA_SITEKEY}\r\n                        ref={recaptchaRef}\r\n                        onChange={value => onChange(value)}\r\n                        onExpired={e => setToken(\"\")}\r\n                        />\r\n                    </div>\r\n                    <button type='submit' id='button' value='Submit'>Send</button>\r\n                </section>\r\n            </section>\r\n        </form>\r\n        \r\n    );\r\n}\r\n\r\nexport default Contact;","C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\About.js",[],"C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\PicModal.js",["66","67","68","69"],"import { useState } from \"react\";\r\nimport {BiRightArrow, BiLeftArrow, BiExitFullscreen} from 'react-icons/bi';\r\n\r\nconst PicModal = ({image, modalStatus, toggleModal, picState, checkNumbers}) => {\r\n    const {key, img, width, height} = image;\r\n    const {index, setIndex} = picState;\r\n    return(\r\n        <div className={`${modalStatus ? 'picture-modal-container show-modal' : 'picture-modal-container'}`}\r\n        >\r\n            <img src={`${img}`} alt={img} className=\"modal-picture\"/>\r\n            <button className=\"prev-button\" onClick={() => setIndex(checkNumbers(index - 1))}><BiLeftArrow/></button>\r\n            <button className=\"next-button\" onClick={() => setIndex(checkNumbers(index + 1))}><BiRightArrow/></button>\r\n            <button className=\"exit-button\" onClick={() => toggleModal(false)}><BiExitFullscreen/></button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PicModal;","C:\\Users\\Martin\\Documents\\GitHub\\portfolio\\client\\src\\helpFunctions\\getImageNames.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":21},{"ruleId":"74","severity":1,"message":"78","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":7,"column":8,"nodeType":"76","messageId":"77","endLine":7,"endColumn":21},{"ruleId":"74","severity":1,"message":"79","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"80","line":2,"column":41,"nodeType":"76","messageId":"77","endLine":2,"endColumn":49},{"ruleId":"74","severity":1,"message":"78","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":15},{"ruleId":"74","severity":1,"message":"81","line":8,"column":10,"nodeType":"76","messageId":"77","endLine":8,"endColumn":19},{"ruleId":"74","severity":1,"message":"82","line":13,"column":11,"nodeType":"76","messageId":"77","endLine":13,"endColumn":29},{"ruleId":"83","severity":1,"message":"84","line":32,"column":21,"nodeType":"85","endLine":32,"endColumn":108},{"ruleId":"86","severity":1,"message":"87","line":32,"column":21,"nodeType":"85","endLine":32,"endColumn":108},{"ruleId":"83","severity":1,"message":"84","line":33,"column":21,"nodeType":"85","endLine":33,"endColumn":117},{"ruleId":"86","severity":1,"message":"87","line":33,"column":21,"nodeType":"85","endLine":33,"endColumn":117},{"ruleId":"74","severity":1,"message":"88","line":1,"column":26,"nodeType":"76","messageId":"77","endLine":1,"endColumn":32},{"ruleId":"74","severity":1,"message":"89","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":11},{"ruleId":"74","severity":1,"message":"90","line":8,"column":12,"nodeType":"76","messageId":"77","endLine":8,"endColumn":18},{"ruleId":"74","severity":1,"message":"91","line":9,"column":12,"nodeType":"76","messageId":"77","endLine":9,"endColumn":21},{"ruleId":"74","severity":1,"message":"92","line":10,"column":12,"nodeType":"76","messageId":"77","endLine":10,"endColumn":26},{"ruleId":"74","severity":1,"message":"93","line":11,"column":12,"nodeType":"76","messageId":"77","endLine":11,"endColumn":17},{"ruleId":"74","severity":1,"message":"94","line":35,"column":15,"nodeType":"76","messageId":"77","endLine":35,"endColumn":29},{"ruleId":"95","severity":1,"message":"96","line":54,"column":24,"nodeType":"97","messageId":"98","endLine":54,"endColumn":26},{"ruleId":"74","severity":1,"message":"99","line":1,"column":10,"nodeType":"76","messageId":"77","endLine":1,"endColumn":18},{"ruleId":"74","severity":1,"message":"100","line":5,"column":12,"nodeType":"76","messageId":"77","endLine":5,"endColumn":15},{"ruleId":"74","severity":1,"message":"101","line":5,"column":22,"nodeType":"76","messageId":"77","endLine":5,"endColumn":27},{"ruleId":"74","severity":1,"message":"102","line":5,"column":29,"nodeType":"76","messageId":"77","endLine":5,"endColumn":35},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'createHistory' is defined but never used.","Identifier","unusedVar","'ReactGA' is defined but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'BiWindows' is defined but never used.","'handleContactClick' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'useRef' is defined but never used.","'env' is defined but never used.","'status' is assigned a value but never used.","'msgStatus' is assigned a value but never used.","'contactMessage' is assigned a value but never used.","'token' is assigned a value but never used.","'recaptchaValue' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'key' is assigned a value but never used.","'width' is assigned a value but never used.","'height' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]